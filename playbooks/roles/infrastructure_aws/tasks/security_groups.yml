---

- name: Create the Bootstrap node's security group
  ec2_group:
    description: OpenShift security group for Bootstrap node
    name: "{{ cluster_id }}-Bootstrap"
    vpc_id: "{{ vpc_id }}"
    tags:
      Name: "{{ cluster_id }}-Bootstrap"
      OpenShiftClusterId: "{{ cluster_id }}"
    rules:
      - rule_desc: Allow SSH from ALL
        proto: tcp
        ports: 22
        cidr_ip: 0.0.0.0/0
      - rule_desc: Allow SSH from VPC networks
        proto: tcp
        ports: 22
        cidr_ip: "{{ vpc_cidr }}"
      - rule_desc: Allow logging from ALL
        proto: tcp
        ports: 19531
        cidr_ip: 0.0.0.0/0

- name: Create the Control nodes' security group
  ec2_group:
    description: OpenShift security group for Control nodes
    name: "{{ cluster_id }}-Control"
    vpc_id: "{{ vpc_id }}"
    tags:
      Name: "{{ cluster_id }}-Control"
      OpenShiftClusterId: "{{ cluster_id }}"
    rules:
      - rule_desc: Allow ICMP (pings) from VPC networks
        proto: icmp
        ports: 0
        cidr_ip: "{{ vpc_cidr }}"

      - rule_desc: Allow SSH from VPC networks
        proto: tcp
        ports: 22
        cidr_ip: "{{ vpc_cidr }}"

      - rule_desc: Allow OpenShift API from VPC networks
        proto: tcp
        ports: 6443
        cidr_ip: "{{ vpc_cidr }}"

      - rule_desc: Allow Machine Configs from VPC networks
        proto: tcp
        ports: 22623
        cidr_ip: "{{ vpc_cidr }}"
  register: r_control_sg

- name: Create the Worker nodes' security group
  ec2_group:
    description: OpenShift security group for Worker nodes
    name: "{{ cluster_id }}-Worker"
    vpc_id: "{{ vpc_id }}"
    tags:
      Name: "{{ cluster_id }}-Worker"
      OpenShiftClusterId: "{{ cluster_id }}"
    rules:
      - rule_desc: Allow ICMP (pings) from VPC networks
        proto: icmp
        ports: 0
        cidr_ip: "{{ vpc_cidr }}"
      - rule_desc: Allow SSH from VPC networks
        proto: tcp
        ports: 22
        cidr_ip: "{{ vpc_cidr }}"
  register: r_worker_sg
        
- name: Add additional rules to the Control nodes' security group
  ec2_group:
    purge_rules: false
    purge_rules_egress: false
    purge_tags: false
    description: OpenShift security group for Control nodes
    name: "{{ cluster_id }}-Control"
    vpc_id: "{{ vpc_id }}"
    rules:
      - rule_desc: Allow etcd from Control SG
        proto: tcp
        from_port: 2379
        to_port: 2380
        group_id: "{{ r_control_sg.group_id }}"

      - rule_desc: Allow VXLAN from Control & Worker SG
        proto: udp
        ports: 4789
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

      - rule_desc: Allow internal cluster communication from Control & Worker SG
        proto: tcp
        ports: 9000-9999
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

      - rule_desc: Allow kubelet, scheduler and controller manager from Control & Worker SG
        proto: tcp
        ports: 10250-10259
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

      - rule_desc: Allow Kubernetes Ingress services from Control & Worker SG
        proto: tcp
        ports: 30000-32767
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

- name: Add additional rules to the Worker nodes' security group
  ec2_group:
    purge_rules: false
    purge_rules_egress: false
    purge_tags: false
    description: OpenShift security group for Worker nodes
    name: "{{ cluster_id }}-Worker"
    vpc_id: "{{ vpc_id }}"
    rules:
      - rule_desc: Allow VXLAN from Control & Worker SG
        proto: udp
        ports: 4789
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

      - rule_desc: Allow internal cluster communication from Control & Worker SG
        proto: tcp
        ports: 9000-9999
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

      - rule_desc: Allow kubelet, scheduler and controller manager from Control & Worker SG
        proto: tcp
        ports: 10250-10250
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"

      - rule_desc: Allow Kubernetes Ingress services from Control & Worker SG
        proto: tcp
        ports: 30000-32767
        group_id:
          - "{{ r_control_sg.group_id }}"
          - "{{ r_worker_sg.group_id }}"
