---

- name: Capture availability zone info
  aws_az_info: {}
  register: r_az_info

- block:
    - name: Capture hosted zone details
      route53_info:
        hosted_zone_id: "{{ route53_hosted_zone_id }}"
        hosted_zone_method: details
        query: hosted_zone
      register: r_capture_public_hosted_zone

    - name: Set hosted zone name
      set_fact:
        route53_hosted_zone_name: "{{ r_capture_public_hosted_zone.HostedZone.Name }}"
  when:
    - cloud == 'aws'
    - route53_hosted_zone_id is defined

- name: Create public DNS records
  route53:
    zone: "{{ route53_hosted_zone_name }}"
    record: "{{ item.record }}.{{ cluster_domain }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
    ttl: 60
    overwrite: yes
    state: present
  loop:
    - record: api
      value: "{{ r_create_external_api_lb.dns_name }}"
      type: CNAME
    - record: "*.apps"
      value: "{{ r_create_ingress_lb.dns_name }}"
      type: CNAME
  when: cloud == 'aws'

- name: Create private DNS zone
  route53_zone:
    zone: "{{ cluster_domain }}"
    vpc_id: "{{ vpc_id }}"
    vpc_region: "{{ r_az_info.availability_zones.0.region_name }}"
  register: r_create_private_dns_zone

# Ansible STILL doesn't support AWS GovCloud becuase modules use the outdated
# boto libraries
- name: Create private DNS records
  command: >-
    aws route53 change-resource-record-sets
    --hosted-zone-id {{ r_create_private_dns_zone.zone_id }}
    --change-batch '{
      "Changes": [
        {
          "Action": "UPSERT",
          "ResourceRecordSet": {
            "Name": "{{ item.record }}.{{ cluster_domain }}",
            "Type": "{{ item.type }}",
            "TTL": 60,
            "ResourceRecords": [
              {
                "Value": "{{ item.value }}"
              }
            ]
          }
        }
      ]
    }'
  loop:
    - record: api
      value: "{{ r_create_external_api_lb.dns_name }}"
      type: CNAME
    - record: api-int
      value: "{{ r_create_internal_api_lb.dns_name }}"
      type: CNAME
    - record: "*.apps"
      value: "{{ r_create_ingress_lb.dns_name }}"
      type: CNAME
    - record: etcd-0
      value: "{{ hostvars.controller0.private_ip_address }}"
      type: A
    - record: etcd-1
      value: "{{ hostvars.controller1.private_ip_address }}"
      type: A
    - record: etcd-2
      value: "{{ hostvars.controller2.private_ip_address }}"
      type: A

# There isn't a clean way to include creating the SRV record in the same way as
# the task above, so making it a separate task for readability.
- name: Create private SRV DNS records
  command: >-
    aws route53 change-resource-record-sets
    --hosted-zone-id {{ r_create_private_dns_zone.zone_id }}
    --change-batch '{
      "Changes": [
        {
          "Action": "UPSERT",
          "ResourceRecordSet": {
            "Name": "_etcd-server-ssl._tcp.{{ cluster_domain }}",
            "Type": "SRV",
            "TTL": 60,
            "ResourceRecords": [
              {
                "Value": "0 10 2380 etcd-0.{{ cluster_domain }}."
              },
              {
                "Value": "0 10 2380 etcd-1.{{ cluster_domain }}."
              },
              {
                "Value": "0 10 2380 etcd-2.{{ cluster_domain }}."
              }
            ]
          }
        }
      ]
    }'
