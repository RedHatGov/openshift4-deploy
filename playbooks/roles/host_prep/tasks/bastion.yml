---

- block:
    - name: Create SSH keys
      openssh_keypair:
        path: ~/.ssh/id_rsa
      register: r_host_prep_create_ssh_keys

    - name: Set the SSH public key fact
      set_fact:
        ssh_public_key: "{{ r_host_prep_create_ssh_keys.public_key | trim }}"
  when: ssh_public_key is undefined

- name: Add additional authorized keys
  authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ item }}"
    state: present
  loop: "{{ additional_authorized_keys }}"

- name: Create MOTD
  template:
    src: bastion_motd.j2
    dest: /etc/motd
  become: yes

- name: Add OpenShift nodes to hosts file
  blockinfile:
    path: /etc/hosts
    block: |
      {% for controller in groups.controllers %}
      {{ hostvars[controller].private_ip_address }}  controller{{ loop.index0 }}
      {% endfor %}
      {%- for worker in groups.workers %}
      {{ hostvars[worker].private_ip_address }}  worker{{ loop.index0 }}
      {% endfor %}
  become: yes

- name: Set KUBECONFIG in .bashrc
  lineinfile:
    path: ~/.bashrc
    regexp: "^export KUBECONFIG="
    line: export KUBECONFIG=$HOME/ocp4/auth/kubeconfig

- name: Install required packages
  yum:
    name:
      - bind-utils
      - git
      - httpd
      - "{{ 'jq' if ansible_distribution_major_version == '8' else omit }}"
      - python3
      - python3-pip
      - "{{ (ansible_distribution_major_version == '8') | ternary('tmux', 'screen') }}"
      - unzip
      - vim
      - wget
    state: present
  become: yes

- name: Install k8s module dependencies
  pip:
    name:
      - openshift
      - PyYAML
    executable: pip3
    state: present
  become: yes

- name: Check for OpenShift installer
  stat:
    path: /usr/local/bin/openshift-install
  register: r_check_openshift_installer

- name: Create temporary download directory
  tempfile:
    state: directory
  register: r_create_temp_download_dir
  when: not r_check_openshift_installer.stat.exists

- name: Update URL if using nightlies
  set_fact:
    openshift_binaries_base_url: http://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview
  when: '"nightly" in openshift_version'

- name: Install OpenShift installer and client
  block:
    - name: Download and unarchive OpenShift installer
      unarchive:
        src: "{{ openshift_binaries_base_url }}/{{ openshift_version }}/openshift-install-linux-{{ openshift_version }}.tar.gz"
        dest: "{{ r_create_temp_download_dir.path }}"
        remote_src: yes

    - name: Copy OpenShift installer binary
      copy:
        src: "{{ r_create_temp_download_dir.path }}/openshift-install"
        dest: /usr/local/bin
        remote_src: yes
        owner: root
        group: root
        mode: 0755
      become: yes

    - name: Download and unarchive OpenShift client
      unarchive:
        src: "{{ openshift_binaries_base_url }}/{{ openshift_version }}/openshift-client-linux-{{ openshift_version }}.tar.gz"
        dest: "{{ r_create_temp_download_dir.path }}"
        remote_src: yes

    - name: Copy OpenShift client binaries
      copy:
        src: "{{ r_create_temp_download_dir.path }}/{{ item }}"
        dest: /usr/local/bin
        remote_src: yes
        owner: root
        group: root
        mode: 0755
      become: yes
      loop:
        - oc
        - kubectl
  always:
    - name: Cleanup temporary download directory
      file:
        path: "{{ r_create_temp_download_dir.path }}"
        state: absent
  when: not r_check_openshift_installer.stat.exists

- name: Start and enable httpd
  service:
    name: httpd
    state: started
    enabled: yes
  become: yes
